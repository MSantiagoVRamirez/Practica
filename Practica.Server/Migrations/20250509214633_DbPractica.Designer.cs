// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Practica.Server.Models;

#nullable disable

namespace Practica.Server.Migrations
{
    [DbContext(typeof(MedicamentosContext))]
    [Migration("20250509214633_DbPractica")]
    partial class DbPractica
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Practica.Server.Models.Medicamentos.Categoria", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("descripcionCategoria")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("estadoCategoria")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("estadoCategoria");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("Practica.Server.Models.Medicamentos.Estado", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("estado")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.ToTable("Estado");
                });

            modelBuilder.Entity("Practica.Server.Models.Medicamentos.Medicamento", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("categoriaId")
                        .HasColumnType("int");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("presentacionId")
                        .HasColumnType("int");

                    b.Property<int>("stock")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("categoriaId");

                    b.HasIndex("presentacionId");

                    b.ToTable("Medicamentos");
                });

            modelBuilder.Entity("Practica.Server.Models.Medicamentos.Presentacion", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("estadoPresentacion")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.HasIndex("estadoPresentacion");

                    b.ToTable("Presentacion");
                });

            modelBuilder.Entity("Practica.Server.Models.Medicamentos.Categoria", b =>
                {
                    b.HasOne("Practica.Server.Models.Medicamentos.Estado", "EstadoFk")
                        .WithMany()
                        .HasForeignKey("estadoCategoria")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("EstadoFk");
                });

            modelBuilder.Entity("Practica.Server.Models.Medicamentos.Medicamento", b =>
                {
                    b.HasOne("Practica.Server.Models.Medicamentos.Categoria", "CategoriaFk")
                        .WithMany()
                        .HasForeignKey("categoriaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Practica.Server.Models.Medicamentos.Presentacion", "PresentacionfK")
                        .WithMany()
                        .HasForeignKey("presentacionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CategoriaFk");

                    b.Navigation("PresentacionfK");
                });

            modelBuilder.Entity("Practica.Server.Models.Medicamentos.Presentacion", b =>
                {
                    b.HasOne("Practica.Server.Models.Medicamentos.Estado", "EstadoFk")
                        .WithMany()
                        .HasForeignKey("estadoPresentacion")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("EstadoFk");
                });
#pragma warning restore 612, 618
        }
    }
}
